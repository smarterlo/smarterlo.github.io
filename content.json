{"meta":{"title":"Zuo","subtitle":"写博客是为了防止重复工作","description":"写博客是为了防止重复工作","author":"Zuo","url":"https://zuobb.cn"},"pages":[{"title":"about","date":"2019-05-10T05:56:34.000Z","updated":"2019-05-10T06:04:44.752Z","comments":true,"path":"about/index.html","permalink":"https://zuobb.cn/about/index.html","excerpt":"","text":""}],"posts":[{"title":"六月知识整理","slug":"六月知识整理","date":"2019-07-22T11:56:09.000Z","updated":"2019-08-08T02:44:40.307Z","comments":true,"path":"2019/07/22/六月知识整理/","link":"","permalink":"https://zuobb.cn/2019/07/22/六月知识整理/","excerpt":"小程序整理–微信小程序云开发步骤明细","text":"小程序整理–微信小程序云开发步骤明细 最近LOL出了个新模式，下棋的下的太着迷了。这里要谴责一下自己。下次在这样，就bug越来越多。可恶啊…… 云开发 微信小程序去年年末出的云开发，可以很方便个人或者小型小程序来开发。前端一个人也可以搞了，目前有免费和收费的标准，可以去官网自行查看； 先创个小程序开通云开发，选择免费的版本。个人可以免费两个； 云开发初始化数据库，云开发连接数据库； 云开发数据库的增删查改； 云函数使用； 云开发调试； 插件的引入使用； 初始化数据库、连接数据库 先打开云开发的控制台，创建环境后，会找到环境的id。在小程序的最初入口，onLaunch里添加如图代码。这里的env 就是环境id，traceUser是指是否在将用户访问记录到用户管理中，在控制台中可见。 连接数据库就特别简单了。 12const db = wx.cloud.database(); //就一行代码 直接在页面的js的文件里 写在最前面。 这个db 就可以后来执行增删查改了。 数据库增删查改 先在控制台里创建表，小程序里叫集合。这里还是比较简单的 不需要规定字段，你后期插入数据有什么字段，他就有什么字段。创建个集合就好了。这里我创建了几个。 我这是个人正在做的小程序，不需要登录，那我就需要一个欢迎界面，点击的时候我把用户的微信存到数据库中，相当于注册。 但是如果以前登录过的呢，那我就把他的信息更新一下，用户进入小程序的唯一的标识openid是不会变的。但是他可能微信昵称，地理位置变了。 所以思路是获取openid 先查询用户在集合userinfo是否有记录。没有就添加，有就更新其他信息。这里获取openid是通过云函数。下面再讲..。 db.collection(‘userinfo’) 就是表示连接到这个集合，.where表示查询 .doc表示更新 .add 就是添加 里面都可以填写各种条件。 这里呢就是data里有啥字段，集合里就是有啥字段。 下面是代码，可以直接粘贴… 123456789101112131415161718192021222324252627282930313233343536373839404142const db = wx.cloud.database(); db.collection('userinfo').where(&#123; openid: app.globalData.openid // 填入当前用户 openid &#125;).get().then(res =&gt; &#123; if (res.data.length == 0) &#123; db.collection('userinfo').add(&#123; data: &#123; country: userInfo.country, province: userInfo.province, city: userInfo.city, nickname: userInfo.nickName, regtime: util.formatTime(new Date()), lasttime: util.formatTime(new Date()), openid: app.globalData.openid, &#125; &#125;).then(res =&gt; &#123; this.setData(&#123; loadModal: false &#125;) wx.navigateTo(&#123; url: '../main/main', &#125;) &#125;) &#125; else &#123; db.collection('userinfo').doc(res.data[0]._id).update(&#123; data: &#123; lasttime: util.formatTime(new Date()), country: userInfo.country, province: userInfo.province, city: userInfo.city, nickname: userInfo.nickName, &#125; &#125;).then(res =&gt; &#123; this.setData(&#123; loadModal:false &#125;) wx.navigateTo(&#123; url: '../main/main', &#125;) &#125;) &#125; &#125;) 云函数 （我想了半天如何总结，但是还是觉得官方的解释还是比较易懂和完整的。下面是官方的解释，） 一个云函数的写法与一个在本地定义的 JavaScript 方法无异，代码运行在云端 Node.js 中。当云函数被小程序端调用时，定义的代码会被放在 Node.js 运行环境中执行。我们可以如在 Node.js 环境中使用 JavaScript 一样在云函数中进行网络请求等操作，而且我们还可以通过云函数后端 SDK 搭配使用多种服务，比如使用云函数 SDK 中提供的数据库和存储 API 进行数据库和存储的操作。云开发的云函数的独特优势在于与微信登录鉴权的无缝整合。当小程序端调用云函数时，云函数的传入参数中会被注入小程序端用户的 openid，开发者无需校验 openid 的正确性因为微信已经完成了这部分鉴权，开发者可以直接使用该 openid。 因为云函数很方便，比如直接就可以获取openid。如果不用云函数的，想必大家还要传code到后台，在后台去调用微信api才能验证获取openid。这里一个函数直接搞定。 在这里右键可以创建一个云函数，我这里创建了一个getOpenid ，下面是js 代码 是不是很神奇。然后onLaunch里直接 wx.cloud.callFunction 获取openid 我设为了全局变量，因为我基本所有的查询都要用到这个唯一标识。可以看第一张图里有。 12345678910// 云函数入口文件const cloud = require('wx-server-sdk')cloud.init()// 云函数入口函数exports.main = async (event, context) =&gt; &#123; return event.userInfo&#125; 云开发调试 版本要求在1.02.1905302 及基础库 2.7.1 起 就可以在network中看到。 network中选择cloud ，这里就可以看到我的之前代码的云函数的调用和数据库的查改。小程序打开时候就调用了云函数获取了openid，之后我点了界面，显示查询 在是更新了我这次最新时间，国家，省份，昵称。 这个真是太舒服了，很方便调试 （啥时候官方能把伪类也能调试就好了..before after 到现在还不能调试..） 插件的使用 这个需要登录微信小程序后台。在设置-》第三方设置-》添加插件。我这里添加了一个日历。 然后小程序app.json配置。plugins 配置这个插件 版本和插件的id 也就是小程序代码块的id。这个可以在后台添加时候获取到的。然后我在这里全局组件里添加，就可以所有页面使用了。 12345678\"plugins\": &#123; \"calendar\": &#123; \"version\": \"1.1.3\", \"provider\": \"wx92c68dae5a8bb046\" &#125;，\"usingComponents\": &#123; \"calendar\": \"plugin://calendar/calendar\"&#125;, 总结一下-云开发很方便。但是也有点小问题，就是有时候可能数据库查询 没有被调用，我也不清楚，目前还在找，可能我写的云开发数据查询这块代码还是不够优化。 -云开发因为是微信自家的东西，所以一些东西很方便，比如云函数获取openid，包括云开发去发模板消息、包括定时触发器（后面这两个我后面会更新的）。 -不得不在说一次云函数，这个真的很好用。大家可以看看官方的文档，后面会用到很多。 -云开发方便了简单小程序的开发，像我这样下班时间一个人做做自己东西，也挺有帮助的。大家也可以尝试，甚至可以弄点兼职一个人自己开发一个简单小程序，哈哈 也能赚点小钱。 立个flag 每月十号前，再不定时更新博客，我的代码就全是bug。。","categories":[{"name":"微信小程序","slug":"微信小程序","permalink":"https://zuobb.cn/categories/微信小程序/"}],"tags":[{"name":"小程序","slug":"小程序","permalink":"https://zuobb.cn/tags/小程序/"},{"name":"云开发","slug":"云开发","permalink":"https://zuobb.cn/tags/云开发/"}],"keywords":[{"name":"微信小程序","slug":"微信小程序","permalink":"https://zuobb.cn/categories/微信小程序/"}]},{"title":"五月梳理","slug":"五月梳理","date":"2019-06-06T07:57:14.000Z","updated":"2019-07-17T07:32:38.276Z","comments":true,"path":"2019/06/06/五月梳理/","link":"","permalink":"https://zuobb.cn/2019/06/06/五月梳理/","excerpt":"小程序整理–如何动态添加picker","text":"小程序整理–如何动态添加picker 最近在做一个计算颇为复杂的小程序，从上图可以看到，实现了动态增删picker，并且每次的值都有获取和判断。 思路用一个数组。for循环显示，并在view上 data-ind 绑定索引，在点击事件时候，获取索引，对其增删改。（这里是自带的时间picker 所以不用判断 range里的数组变化。下面会有例子说明，其实原理一样。） 过程js数据 medicalItem: [{date1:‘请选择’, date2: ‘请选择’ }] for循环，date1 date2为入院时间和出院时间方法addMedical 添加数据，每次判断数组最后一条数据的date1 、date2 是否为“请选择”，即可判断是否已经选择时间。bindDate 为picker的绑定事件，通过e.currentTarget.dataset.ind来获取数组的序列，data-filed 来获取是哪个字段 给对应的数组下标中的某个字段赋值。OK！一切都明白了。以下就是代码部分。 wxml 代码如下:123456789101112131415161718192021222324252627282930313233343536373839404142434445464748&lt;block wx:for=\"&#123;&#123;medicalItem&#125;&#125;\" wx:key&gt; &lt;view class=\"cu-bar input margin-lr-sm solid-bottom \"&gt; &lt;view class=\"action width-xs \"&gt; &lt;text class=\"text-black\"&gt;入院时间&lt;/text&gt; &lt;/view&gt; &lt;picker mode='date' bindchange=\"bindDate\" data-index=\"&#123;&#123;index&#125;&#125;\" data-filed='date1' value=\"&#123;&#123;item.date1&#125;&#125;\" start=\"1995-10-25\" end=\"&#123;&#123;toDay&#125;&#125;\" class='text-gray width-sm'&gt; &lt;view class='flex justify-between'&gt; &#123;&#123;item.date1&#125;&#125; &lt;/view&gt; &lt;/picker&gt; &lt;view class=' text-green text-xxl' wx:if=\"&#123;&#123;index!=0&#125;&#125;\" bindtap='closeMedical' data-index='&#123;&#123;index&#125;&#125;'&gt; &lt;text class='icon-roundclose'&gt;&lt;/text&gt; &lt;/view&gt; &lt;view class=' text-red text-xxl' wx:if=\"&#123;&#123;index==0&#125;&#125;\" style='visibility:hidden'&gt; &lt;text class='icon-question'&gt;&lt;/text&gt; &lt;/view&gt; &lt;/view&gt; &lt;view class=\"cu-bar input margin-lr-sm solid-bottom \"&gt; &lt;view class=\"action width-xs \"&gt; &lt;text class=\"text-black\"&gt;出院时间&lt;/text&gt; &lt;/view&gt; &lt;picker mode='date' bindchange=\"bindDate\" data-index=\"&#123;&#123;index&#125;&#125;\" data-filed='date2' value=\"&#123;&#123;item.date2&#125;&#125;\" start=\"1995-10-25\" end=\"&#123;&#123;toDay&#125;&#125;\" class='text-gray width-sm'&gt; &lt;view class='flex justify-between'&gt; &#123;&#123;item.date2&#125;&#125; &lt;/view&gt; &lt;/picker&gt; &lt;view class=' text-red text-xxl' style='visibility:hidden'&gt; &lt;text class='icon-question'&gt;&lt;/text&gt; &lt;/view&gt; &lt;/view&gt; &lt;view class=\"cu-bar input margin-lr-sm solid-bottom \"&gt; &lt;view class=\"action width-xs \"&gt; &lt;text class=\"text-black\"&gt;医嘱休息天数&lt;/text&gt; &lt;/view&gt; &lt;input class='width-sm' placeholder='请输入...' focus=\"&#123;&#123;false&#125;&#125;\" data-ind='&#123;&#123;index&#125;&#125;' bindinput='zyInput' type=\"number\" maxlength=\"300\" cursor-spacing=\"10\"&gt;&lt;/input&gt; &lt;view class=' text-red text-xxl' style='visibility:hidden'&gt; &lt;text class='icon-question'&gt;&lt;/text&gt; &lt;/view&gt; &lt;/view&gt;&lt;/block&gt;&lt;view class=\"cu-bar text-blue input margin-lr-sm flex justify-between \" bindtap='addMedical'&gt; &lt;view class=\"action width-sm \"&gt; &lt;text class=\"text-blue\"&gt;添加更多住院&lt;/text&gt; &lt;/view&gt; &lt;text class='icon-roundadd'&gt;&lt;/text&gt;&lt;/view&gt; js 代码如下:123456789101112131415161718192021222324252627282930313233343536373839404142434445data:&#123; //医疗 medicalItem: [&#123; date1: '请选择', date2: '请选择' &#125;],&#125; /** * 添加更多住院 */ addMedical() &#123; let item = this.data.medicalItem; if (item[item.length - 1].date1 == '请选择' || item[item.length - 1].date2 == '请选择') &#123; this.setData(&#123; modalContent: '请填写完整上次入院时间!', modal: true, &#125;) &#125; else &#123; item[item.length] = &#123; date1: '请选择', date2: '请选择' &#125; this.setData(&#123; medicalItem: item &#125;) &#125; &#125;, closeMedical(e) &#123; let ind = e.currentTarget.dataset.index; let item = this.data.medicalItem; item.splice(ind, 1); this.setData(&#123; medicalItem: item &#125;) &#125;, bindDate(e) &#123; let item = this.data.medicalItem; let day = 0; item[e.currentTarget.dataset.index][e.currentTarget.dataset.filed] = e.detail.value; this.setData(&#123; medicalItem: item, &#125;) &#125;, 这个就比上个复杂了很多计算， 这我项目中才用到的，我这里就不说明了，我就来说明一下如何实现自定义的picker数据的时候动态添加，获取值用来计算。 思路用一个数组。for循环显示，并在view上 data-ind 绑定索引，在点击事件时候，获取索引，对其增删改。思路是没变，但是过程变了。这里我要循环的不是数据了，而是我要picker里的多列里的下标。 过程js数据 //定残 disableArry: [ [‘一级’, ‘二级’, ‘三级’, ‘四级’, ‘五级’, ‘六级’, ‘七级’, ‘八级’, ‘九级’, ‘十级’], [‘1处’, ‘2处’, ‘3处’, ‘4处’, ‘5处’, ‘6处’, ‘7处’, ‘8处’, ‘9处’, ‘10处’, ] ], disableIndex: [[0, 0]],picker 里range里的数组是disableArry; 但是我for循环的是disableIndex，disableIndex:里是一个数组，每个元素为对应的picker 中range的下标。依旧是data-index里存放索引，多列bindchange里是获取一个数组，格式就是[第一列的index，第二列的index]。添加到disableIndex:里。 OK！多说无益思路大同小异。以下就是代码部分。可以忽略我计算的相关代码。理解如何动态添加和获取就可以了。 wxml 代码如下:1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950&lt;view class='text-sm margin-sm text-gray '&gt; 定残情况 &lt;/view&gt; &lt;view class=\"cu-bar input margin-lr-sm solid-bottom \"&gt; &lt;view class=\"action width-xs \"&gt; &lt;text class=\"text-black\"&gt;定残时间&lt;/text&gt; &lt;/view&gt; &lt;picker mode='date' bindchange=\"binddisabledate\" value=\"&#123;&#123;disabledate&#125;&#125;\" start=\"1995-10-25\" end=\"&#123;&#123;toDay&#125;&#125;\" class='text-gray width-sm'&gt; &lt;view class='flex justify-between'&gt; &#123;&#123;disabledate&#125;&#125; &lt;/view&gt; &lt;/picker&gt; &lt;view class='text-red text-xxl' bindtap='showModal' data-ind='11'&gt; &lt;text class='icon-question'&gt;&lt;/text&gt; &lt;/view&gt; &lt;/view&gt; &lt;block wx:for=\"&#123;&#123;disableIndex&#125;&#125;\" wx:key&gt; &lt;view class=\"cu-bar input margin-lr-sm solid-bottom \"&gt; &lt;view class=\"action width-xs \"&gt; &lt;text class=\"text-black\"&gt;伤残等级&lt;/text&gt; &lt;/view&gt; &lt;picker mode=\"multiSelector\" data-index=\"&#123;&#123;index&#125;&#125;\" bindchange=\"bindMultiPickerChange\" bindcolumnchange=\"bindMultiPickerColumnChange\" value=\"&#123;&#123;item&#125;&#125;\" range=\"&#123;&#123;disableArry&#125;&#125;\" class='text-gray width-sm'&gt; &lt;view class='flex justify-between'&gt; &#123;&#123;disableArry[0][item[0]]&#125;&#125;，&#123;&#123;disableArry[1][item[1]]&#125;&#125; &lt;/view&gt; &lt;/picker&gt; &lt;view class=' text-green text-xxl' style='visibility:&#123;&#123;index==0?\"hidden\":\"visible\"&#125;&#125;' bindtap='closeDisable' data-index='&#123;&#123;index&#125;&#125;'&gt; &lt;text class='icon-roundclose'&gt;&lt;/text&gt; &lt;/view&gt; &lt;/view&gt; &lt;/block&gt; &lt;view class=\"cu-bar input margin-lr-sm solid-bottom \"&gt; &lt;view class=\"action width-xs \"&gt; &lt;text class=\"text-black\"&gt;赔偿指数&lt;/text&gt; &lt;/view&gt; &lt;input class='width-sm text-gray' disabled='&#123;&#123;true&#125;&#125;' value='&#123;&#123;constParam.disable.text&#125;&#125;' focus=\"&#123;&#123;false&#125;&#125;\" maxlength=\"300\" cursor-spacing=\"10\"&gt;&lt;/input&gt; &lt;view class=' text-red text-xxl' bindtap='showModal' data-ind='12'&gt; &lt;text class='icon-question'&gt;&lt;/text&gt; &lt;/view&gt; &lt;/view&gt; &lt;view class=\"cu-bar text-blue input margin-lr-sm flex justify-between \" bindtap='addDisable'&gt; &lt;view class=\"action width-sm \"&gt; &lt;text class=\"text-blue\"&gt;添加更多伤残&lt;/text&gt; &lt;/view&gt; &lt;text class='icon-roundadd'&gt;&lt;/text&gt; &lt;/view&gt; js 代码如下: disableCount为我计算函数。可以忽略不看。12345678910111213141516171819202122232425262728293031323334353637data:&#123; //定残 disableArry: [ ['一级', '二级', '三级', '四级', '五级', '六级', '七级', '八级', '九级', '十级'], ['1处', '2处', '3处', '4处', '5处', '6处', '7处', '8处', '9处', '10处', ] ], disableIndex: [ [0, 0] ],&#125; //多列伤残 bindMultiPickerChange: function(e) &#123; let item = this.data.disableIndex; item[e.currentTarget.dataset.index] = e.detail.value; //计算 this.disableCount(item); &#125;, //添加伤残 addDisable: function(e) &#123; let item = this.data.disableIndex; item[item.length] = [0, 0]; this.setData(&#123; disableIndex: item, \"constParam.disable\": &#123; text: '100%', value: 1, &#125; &#125;) &#125;, closeDisable: function(e) &#123; let item = this.data.disableIndex; item.splice(e.currentTarget.dataset.index, 1); //计算 this.disableCount(item); &#125;, 好了。以上就是我最近做的比较复杂的一个picker的动态添加获取。 有了思路和想法去做，一切都会变的简单了。","categories":[{"name":"微信小程序","slug":"微信小程序","permalink":"https://zuobb.cn/categories/微信小程序/"}],"tags":[{"name":"小程序","slug":"小程序","permalink":"https://zuobb.cn/tags/小程序/"}],"keywords":[{"name":"微信小程序","slug":"微信小程序","permalink":"https://zuobb.cn/categories/微信小程序/"}]},{"title":"我的第一篇博客","slug":"我的第一篇博客","date":"2019-05-10T13:29:05.000Z","updated":"2019-05-18T05:20:17.079Z","comments":true,"path":"2019/05/10/我的第一篇博客/","link":"","permalink":"https://zuobb.cn/2019/05/10/我的第一篇博客/","excerpt":"第一篇博客，存点工具网址","text":"第一篇博客，存点工具网址 勿忘初心 每个月必须坚持一篇博客更新。 记住初心，为了防止重复工作。 本篇持续更新个人觉得好用的资源网址 资源网址图片类网址比特虫–在线制作ico图标 aTool–在线制作占位图 花瓣–免费好看的图库 uupoop–在线PS图片 iconfont–阿里图标 前端工具网址jsperf–js性能测试 Autoprefixer–自动添加css前缀 sojson–js解密 fillder–抓包工具 微微–二维码在线生成 CODEPEN–在线运行前端代码 知名团队博客淘宝前端团队博客 360前端团队博客 美团技术团队博客 腾讯Alloyteam团队博客","categories":[{"name":"资源网址","slug":"资源网址","permalink":"https://zuobb.cn/categories/资源网址/"}],"tags":[{"name":"资源","slug":"资源","permalink":"https://zuobb.cn/tags/资源/"},{"name":"工具","slug":"工具","permalink":"https://zuobb.cn/tags/工具/"}],"keywords":[{"name":"资源网址","slug":"资源网址","permalink":"https://zuobb.cn/categories/资源网址/"}]},{"title":"Hello World","slug":"hello-world","date":"2019-05-09T06:24:02.580Z","updated":"2019-05-10T06:23:53.410Z","comments":true,"path":"2019/05/09/hello-world/","link":"","permalink":"https://zuobb.cn/2019/05/09/hello-world/","excerpt":"开源在线 Markdown 编辑器","text":"开源在线 Markdown 编辑器 Editor.md （强烈推荐大家使用） 目录 (Table of Contents) [TOCM] [TOC] Heading 1Heading 2Heading 3Heading 4Heading 5Heading 6Heading 1 link Heading linkHeading 2 link Heading linkHeading 3 link Heading linkHeading 4 link Heading link Heading link Heading linkHeading 5 link Heading linkHeading 6 link Heading link标题（用底线的形式）Heading (underline)This is an H1This is an H2字符效果和横线等 删除线 删除线（开启识别HTML标签时）斜体字 斜体字粗体 粗体粗斜体 粗斜体 上标：X2，下标：O2 缩写(同HTML的abbr标签) 即更长的单词或短语的缩写形式，前提是开启识别HTML标签时，已默认开启 The HTML specification is maintained by the W3C. 引用 Blockquotes 引用文本 Blockquotes 引用的行内混合 Blockquotes 引用：如果想要插入空白换行即&lt;br /&gt;标签，在插入处先键入两个以上的空格然后回车即可，普通链接。 锚点与链接 Links普通链接 普通链接带标题 直接链接：https://github.com 锚点链接 mailto:test.test@gmail.com GFM a-tail link @pandao 邮箱地址自动链接 test.test@gmail.com www@vip.qq.com @pandao 多语言代码高亮 Codes行内代码 Inline code执行命令：npm install marked 缩进风格即缩进四个空格，也做为实现类似 &lt;pre&gt; 预格式化文本 ( Preformatted Text ) 的功能。 &lt;?php echo &quot;Hello world!&quot;; ?&gt; 预格式化文本： | First Header | Second Header | | ------------- | ------------- | | Content Cell | Content Cell | | Content Cell | Content Cell | JS代码 123456789101112131415161718192021222324252627282930313233343536function test() &#123; console.log(\"Hello world!\");&#125; (function()&#123; var box = function() &#123; return box.fn.init(); &#125;; box.prototype = box.fn = &#123; init : function()&#123; console.log('box.init()'); return this; &#125;, add : function(str) &#123; alert(\"add\", str); return this; &#125;, remove : function(str) &#123; alert(\"remove\", str); return this; &#125; &#125;; box.fn.init.prototype = box.fn; window.box =box;&#125;)();var testBox = box();testBox.add(\"jQuery\").remove(\"jQuery\"); HTML 代码 HTML codes1234567891011121314151617&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;mate charest=\"utf-8\" /&gt; &lt;meta name=\"keywords\" content=\"Editor.md, Markdown, Editor\" /&gt; &lt;title&gt;Hello world!&lt;/title&gt; &lt;style type=\"text/css\"&gt; body&#123;font-size:14px;color:#444;font-family: \"Microsoft Yahei\", Tahoma, \"Hiragino Sans GB\", Arial;background:#fff;&#125; ul&#123;list-style: none;&#125; img&#123;border:none;vertical-align: middle;&#125; &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;h1 class=\"text-xxl\"&gt;Hello world!&lt;/h1&gt; &lt;p class=\"text-green\"&gt;Plain text&lt;/p&gt; &lt;/body&gt;&lt;/html&gt; 图片 ImagesImage: Follow your heart. 图为：厦门白城沙滩 图片加链接 (Image + Link)： 图为：李健首张专辑《似水流年》封面 列表 Lists无序列表（减号）Unordered Lists (-) 列表一 列表二 列表三 无序列表（星号）Unordered Lists (*) 列表一 列表二 列表三 无序列表（加号和嵌套）Unordered Lists (+) 列表一 列表二 列表二-1 列表二-2 列表二-3 列表三 列表一 列表二 列表三 有序列表 Ordered Lists (-) 第一行 第二行 第三行 GFM task list GFM task list 1 GFM task list 2 GFM task list 3 GFM task list 3-1 GFM task list 3-2 GFM task list 3-3 GFM task list 4 GFM task list 4-1 GFM task list 4-2 绘制表格 Tables 项目 价格 数量 计算机 $1600 5 手机 $12 12 管线 $1 234 First Header Second Header Content Cell Content Cell Content Cell Content Cell First Header Second Header Content Cell Content Cell Content Cell Content Cell Function name Description help() Display the help window. destroy() Destroy your computer! Left-Aligned Center Aligned Right Aligned col 3 is some wordy text $1600 col 2 is centered $12 zebra stripes are neat $1 Item Value Computer $1600 Phone $12 Pipe $1 特殊符号 HTML Entities Codes&copy; &amp; &uml; &trade; &iexcl; &pound;&amp; &lt; &gt; &yen; &euro; &reg; &plusmn; &para; &sect; &brvbar; &macr; &laquo; &middot; X&sup2; Y&sup3; &frac34; &frac14; &times; &divide; &raquo; 18&ordm;C &quot; &apos; [========] Emoji表情 :smiley: Blockquotes :star: GFM task lists &amp; Emoji &amp; fontAwesome icon emoji &amp; editormd logo emoji :editormd-logo-5x: :smiley: @mentions, :smiley: #refs, links, formatting, and tags supported :editormd-logo:; list syntax required (any unordered or ordered list supported) :editormd-logo-3x:; [ ] :smiley: this is a complete item :smiley:; []this is an incomplete item test link :fa-star: @pandao; [ ]this is an incomplete item :fa-star: :fa-gear:; :smiley: this is an incomplete item test link :fa-star: :fa-gear:; :smiley: this is :fa-star: :fa-gear: an incomplete item test link; 反斜杠 Escape*literal asterisks* [========] 科学公式 TeX(KaTeX)$$E=mc^2$$ 行内的公式$$E=mc^2$$行内的公式，行内的$$E=mc^2$$公式。 $$x &gt; y$$ $$(\\sqrt{3x-1}+(1+x)^2)$$ $$\\sin(\\alpha)^{\\theta}=\\sum_{i=0}^{n}(x^i + \\cos(f))$$ 多行公式： 12345\\displaystyle\\left( \\sum\\_&#123;k=1&#125;^n a\\_k b\\_k \\right)^2\\leq\\left( \\sum\\_&#123;k=1&#125;^n a\\_k^2 \\right)\\left( \\sum\\_&#123;k=1&#125;^n b\\_k^2 \\right) 123456789\\displaystyle \\frac&#123;1&#125;&#123; \\Bigl(\\sqrt&#123;\\phi \\sqrt&#123;5&#125;&#125;-\\phi\\Bigr) e^&#123; \\frac25 \\pi&#125;&#125; = 1+\\frac&#123;e^&#123;-2\\pi&#125;&#125; &#123;1+\\frac&#123;e^&#123;-4\\pi&#125;&#125; &#123; 1+\\frac&#123;e^&#123;-6\\pi&#125;&#125; &#123;1+\\frac&#123;e^&#123;-8\\pi&#125;&#125; &#123;1+\\cdots&#125; &#125; &#125; &#125; 123f(x) = \\int_&#123;-\\infty&#125;^\\infty \\hat f(\\xi)\\,e^&#123;2 \\pi i \\xi x&#125; \\,d\\xi 分页符 Page break Print Test: Ctrl + P [========] 绘制流程图 Flowchart12345678st=&gt;start: 用户登陆op=&gt;operation: 登陆操作cond=&gt;condition: 登陆成功 Yes or No?e=&gt;end: 进入后台st-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op [========] 绘制序列图 Sequence Diagram1234Andrew-&gt;China: Says Hello Note right of China: China thinks\\nabout it China--&gt;Andrew: How are you? Andrew-&gt;&gt;China: I am good thanks! End","categories":[{"name":"博客工具","slug":"博客工具","permalink":"https://zuobb.cn/categories/博客工具/"}],"tags":[{"name":"Md编辑工具","slug":"Md编辑工具","permalink":"https://zuobb.cn/tags/Md编辑工具/"},{"name":"Editor","slug":"Editor","permalink":"https://zuobb.cn/tags/Editor/"}],"keywords":[{"name":"博客工具","slug":"博客工具","permalink":"https://zuobb.cn/categories/博客工具/"}]}]}